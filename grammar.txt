<language> ::= <world_declaration> {<array_declaration>} {<function>} <main_body>
<main_body>::= BEGIN {<statement>} END
<function>::= DEFINE ID OPPARENT [<function_def_parameters>] CLPARENT OPCURL {statement} CLCURL
<function_def_parameters>::= ID {SEMI ID}
<variable> ::= ID [<array_idxing_expr>]
<world_declaration>::= WORLD <size> <size> ENDL
<statement>::= ( <function_call> | <loop> | <if_statement> | <assignment_expression> | <return> | <var_declaration> | <) ENDL
<return>::= RETURN [<value>]
<function_call>::= CALL ID OPPARENT [<arguments>] CLPARENT
<arguments> ::= <value> {SEMI <value>}
<value>::= NUM | <variable> | TRUE | FALSE
<condition> ::= OPPARENT <comparison> { (AND | OR) <comparison> } CLPARENT
<comparison> ::= <value> (EQU | SMALL | SMALLQUI | NOTEQUI) <value>
<assignment_expression>::= <variable> ASSIGN <expression>
<expression>::= <function_call> | <addop> { (ADD | SUB) <addop> }
<addop>::= <value> {( MUL | DIV ) <value>}
<array_declaration>::= ARRAY ID <size> <size> ENDL
<size> ::= OPBRACK NUM CLBRACKET
<array_idxing_expr> ::= <placing> <placing>
<placing> ::= OPBRACK (ID | NUM) CLBRACKET
<loop>::= LOOP <condition> OPCURL {<statement>} CLCURL
<if_statement>::= IF <condition> OPCURL {<statement>} CLCURL [<else_statement>]
<else_statement>::= ELSE OPCURL {<statement>} CLCURL